#!/bin/bash

## Description: Creates a WordPress for you
## Usage: wp-create
## Example: ddev exec ".ddev/commands/web/wp-create"

if [ -f "/var/www/html/wp-config.php" ]; then
	echo "WordPress is probably already installed. That's why I'd rather quit now. To start please use 'ddev start'."
else
	## download and install wordpress
	wp core download --locale=$WP_DDEV_LOCALE --version=$WP_DDEV_VERSION
	wp config create --dbname=db --dbuser=db --dbpass=db --dbhost=db
	wp core install --url=https://$VIRTUAL_HOST --title=$WP_DDEV_TITLE --admin_user=$WP_DDEV_ADMIN_USER --admin_email=$WP_DDEV_ADMIN_EMAIL

	## get new salts for your wp-config.php file
	wp config shuffle-salts

	## more ram and less more security
	wp config set WP_POST_REVISIONS false --raw --add
	wp config set WP_MEMORY_LIMIT 256M --add
	wp config set WP_MAX_MEMORY_LIMIT 256M --add
	wp config set DISALLOW_FILE_EDIT true --raw

	## wordpress debug mode for developers
	wp config set WP_DEBUG true --raw --add
	wp config set WP_DEBUG_LOG true --raw --add
	wp config set WP_DEBUG_DISPLAY false --raw --add
	#wp config set SCRIPT_DEBUG true --raw --add
	#wp config set SAVEQUERIES true --raw --add

	## empties a site of its content (posts, comments, terms, and meta)
	wp site empty --uploads --yes

	## delete all default plugins
	wp plugin delete --all

	## delete the default blogdescription
	wp option update blogdescription ''

	## hide for the search engines
	wp option update blog_public 0

	## disable the avatars
	wp option update show_avatars 0

	## change permalinks
	wp option update permalink_structure '/%postname%/'

	## install and activate plugins
	wp plugin install $WP_DDEV_PLUGINS --activate

	## after installing all plugins, update the language
	wp language plugin install --all $WP_DDEV_LOCALE

	## install wp-cli packages
	wp package install $WP_DDEV_CLI_PACKAGES
fi
